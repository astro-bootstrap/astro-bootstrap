---
import Accordion from './Accordion';
import { nanoid } from 'nanoid';

const {
  flush,
  class: className,
  data = [],
  id: userId,
  alwaysOpen,
  headerClass,
  itemClass,
  bodyClass,
} = Astro.props;
export interface AccordionDataType {
  header: string;
  body: string;
  show?: boolean;
}
interface Props {
  alwaysOpen?: boolean;
  id?: string;
  headerClass?: string;
  itemClass?: string;
  bodyClass?: string;
  flush?: boolean;
  class?: string;
  data?: AccordionDataType[];
}

const id = userId || `accordion-${nanoid(8)}`;
---

<div class:list={['accordion', className, { 'accordion-flush': flush }]} {id}>
  <slot>
    {
      data &&
        data.map((item, index: number) => (
          <Accordion.Item class={itemClass}>
            <Accordion.Header
              parent={id}
              {index}
              class={headerClass}
              show={item.show}
            >
              <Fragment set:html={item.header} />
            </Accordion.Header>
            <Accordion.Body
              parent={id}
              {index}
              class={bodyClass}
              show={item.show}
              {alwaysOpen}
            >
              <Fragment set:html={item.body} />
            </Accordion.Body>
          </Accordion.Item>
        ))
    }
  </slot>
</div>
<script>
  import Collapse from 'bootstrap/js/dist/collapse';
  const collapseElementList = document.querySelectorAll('.astro-bs.collapse');
  collapseElementList.forEach(
    (collapseEl) => new Collapse(collapseEl, {toggle: false}),
  );
</script>
